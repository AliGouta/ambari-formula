		{
            "storm-env": {
                "properties": {
                    "content": "\n#!/bin/bash\n\n# Set Storm specific environment variables here.\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\n\n# export STORM_CONF_DIR=\"\"\nexport STORM_HOME=/usr/hdp/current/storm-client",
                    "storm_log_dir": "/data/var/log/storm",
                    "storm_pid_dir": "/data/var/run/storm",
                    "storm_user": "storm"
                }
            }
        },
        {
            "storm-site": {
                "properties": {
                    "_storm.min.ruid": "null",
                    "_storm.thrift.nonsecure.transport": "backtype.storm.security.auth.SimpleTransportPlugin",
                    "_storm.thrift.secure.transport": "backtype.storm.security.auth.kerberos.KerberosSaslTransportPlugin",
                    "dev.zookeeper.path": "/tmp/dev-storm-zookeeper",
                    "drpc.childopts": "-Xmx768m _JAAS_PLACEHOLDER",
                    "drpc.invocations.port": "3773",
                    "drpc.port": "3772",
                    "drpc.queue.size": "128",
                    "drpc.request.timeout.secs": "600",
                    "drpc.worker.threads": "64",
                    "java.library.path": "/usr/local/lib:/opt/local/lib:/usr/lib:/usr/hdp/current/storm-client/lib",
                    "logviewer.appender.name": "A1",
                    "logviewer.childopts": "-Xmx128m _JAAS_PLACEHOLDER",
                    "logviewer.port": "8000",
                    "nimbus.cleanup.inbox.freq.secs": "600",
                    "nimbus.file.copy.expiration.secs": "600",
                    "nimbus.host": "%HOSTGROUP::host_group_master_2%",
                    "nimbus.inbox.jar.expiration.secs": "3600",
                    "nimbus.monitor.freq.secs": "10",
                    "nimbus.reassign": "true",
                    "nimbus.supervisor.timeout.secs": "60",
                    "nimbus.task.launch.secs": "120",
                    "nimbus.task.timeout.secs": "30",
                    "nimbus.thrift.max_buffer_size": "1048576",
                    "nimbus.thrift.port": "6627",
                    "nimbus.topology.validator": "backtype.storm.nimbus.DefaultTopologyValidator",
                    "storm.cluster.mode": "distributed",
                    "storm.local.dir": "/data/mnt/hadoop/storm",
                    "storm.local.mode.zmq": "false",
                    "storm.messaging.netty.buffer_size": "5242880",
                    "storm.messaging.netty.client_worker_threads": "1",
                    "storm.messaging.netty.max_retries": "30",
                    "storm.messaging.netty.max_wait_ms": "1000",
                    "storm.messaging.netty.min_wait_ms": "100",
                    "storm.messaging.netty.server_worker_threads": "1",
                    "storm.messaging.transport": "backtype.storm.messaging.netty.Context",
                    "storm.zookeeper.connection.timeout": "15000",
                    "storm.zookeeper.port": "2181",
                    "storm.zookeeper.retry.interval": "1000",
                    "storm.zookeeper.retry.intervalceiling.millis": "30000",
                    "storm.zookeeper.retry.times": "5",
                    "storm.zookeeper.root": "/storm",
                    "storm.zookeeper.servers": "['%HOSTGROUP::host_group_master_3%','%HOSTGROUP::host_group_master_2%']",
                    "storm.zookeeper.session.timeout": "20000",
                    "supervisor.heartbeat.frequency.secs": "5",
                    "supervisor.monitor.frequency.secs": "3",
                    "supervisor.slots.ports": "[6700, 6701]",
                    "supervisor.worker.start.timeout.secs": "120",
                    "supervisor.worker.timeout.secs": "30",
                    "task.heartbeat.frequency.secs": "3",
                    "task.refresh.poll.secs": "10",
                    "topology.acker.executors": "null",
                    "topology.builtin.metrics.bucket.size.secs": "60",
                    "topology.debug": "false",
                    "topology.disruptor.wait.strategy": "com.lmax.disruptor.BlockingWaitStrategy",
                    "topology.enable.message.timeouts": "true",
                    "topology.error.throttle.interval.secs": "10",
                    "topology.executor.receive.buffer.size": "1024",
                    "topology.executor.send.buffer.size": "1024",
                    "topology.fall.back.on.java.serialization": "true",
                    "topology.kryo.factory": "backtype.storm.serialization.DefaultKryoFactory",
                    "topology.max.error.report.per.interval": "5",
                    "topology.max.spout.pending": "null",
                    "topology.max.task.parallelism": "null",
                    "topology.message.timeout.secs": "30",
                    "topology.optimize": "true",
                    "topology.receiver.buffer.size": "8",
                    "topology.skip.missing.kryo.registrations": "false",
                    "topology.sleep.spout.wait.strategy.time.ms": "1",
                    "topology.spout.wait.strategy": "backtype.storm.spout.SleepSpoutWaitStrategy",
                    "topology.state.synchronization.timeout.secs": "60",
                    "topology.stats.sample.rate": "0.05",
                    "topology.tick.tuple.freq.secs": "null",
                    "topology.transfer.buffer.size": "1024",
                    "topology.trident.batch.emit.interval.millis": "500",
                    "topology.tuple.serializer": "backtype.storm.serialization.types.ListDelegateSerializer",
                    "topology.worker.childopts": "null",
                    "topology.worker.shared.thread.pool.size": "4",
                    "topology.workers": "1",
                    "transactional.zookeeper.port": "null",
                    "transactional.zookeeper.root": "/transactional",
                    "transactional.zookeeper.servers": "null",
                    "ui.childopts": "-Xmx768m _JAAS_PLACEHOLDER",
                    "ui.filter": "null",
                    "ui.port": "8744",
                    "worker.heartbeat.frequency.secs": "1",
                    "zmq.hwm": "0",
                    "zmq.linger.millis": "5000",
                    "zmq.threads": "1"
                }
            }
        },
		{
            "topology": {
                "properties": {
                    "content": "\n        <topology>\n\n            <gateway>\n\n                <provider>\n                    <role>authentication</role>\n                    <name>ShiroProvider</name>\n                    <enabled>true</enabled>\n                    <param>\n                        <name>sessionTimeout</name>\n                        <value>30</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm</name>\n                        <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapRealm</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm.userDnTemplate</name>\n                        <value>uid={0},ou=people,dc=hadoop,dc=apache,dc=org</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm.contextFactory.url</name>\n                        <value>ldap://{{knox_host_name}}:33389</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm.contextFactory.authenticationMechanism</name>\n                        <value>simple</value>\n                    </param>\n                    <param>\n                        <name>urls./**</name>\n                        <value>authcBasic</value>\n                    </param>\n                </provider>\n\n                <provider>\n                    <role>identity-assertion</role>\n                    <name>Default</name>\n                    <enabled>true</enabled>\n                </provider>\n\n                <provider>\n                    <role>authorization</role>\n                    <name>AclsAuthz</name>\n                    <enabled>true</enabled>\n                </provider>\n\n            </gateway>\n\n            <service>\n                <role>NAMENODE</role>\n                <url>hdfs://{{namenode_host}}:{{namenode_rpc_port}}</url>\n            </service>\n\n            <service>\n                <role>JOBTRACKER</role>\n                <url>rpc://{{rm_host}}:{{jt_rpc_port}}</url>\n            </service>\n\n            <service>\n                <role>WEBHDFS</role>\n                <url>http://{{namenode_host}}:{{namenode_http_port}}/webhdfs</url>\n            </service>\n\n            <service>\n                <role>WEBHCAT</role>\n                <url>http://{{webhcat_server_host}}:{{templeton_port}}/templeton</url>\n            </service>\n\n            <service>\n                <role>OOZIE</role>\n                <url>http://{{oozie_server_host}}:{{oozie_server_port}}/oozie</url>\n            </service>\n\n            <service>\n                <role>WEBHBASE</role>\n                <url>http://{{hbase_master_host}}:{{hbase_master_port}}</url>\n            </service>\n\n            <service>\n                <role>HIVE</role>\n                <url>http://{{hive_server_host}}:{{hive_http_port}}/{{hive_http_path}}</url>\n            </service>\n\n            <service>\n                <role>RESOURCEMANAGER</role>\n                <url>http://{{rm_host}}:{{rm_port}}/ws</url>\n            </service>\n        </topology>"
                }
            }
        },
        {
            "users-ldif": {
                "properties": {
                    "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nversion: 1\n\n# Please replace with site specific values\ndn: dc=hadoop,dc=apache,dc=org\nobjectclass: organization\nobjectclass: dcObject\no: Hadoop\ndc: hadoop\n\n# Entry for a sample people container\n# Please replace with site specific values\ndn: ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:organizationalUnit\nou: people\n\n# Entry for a sample end user\n# Please replace with site specific values\ndn: uid=guest,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: Guest\nsn: User\nuid: guest\nuserPassword:guest-password\n\n# entry for sample user admin\ndn: uid=admin,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: Admin\nsn: Admin\nuid: admin\nuserPassword:admin-password\n\n# entry for sample user sam\ndn: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: sam\nsn: sam\nuid: sam\nuserPassword:sam-password\n\n# entry for sample user tom\ndn: uid=tom,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: tom\nsn: tom\nuid: tom\nuserPassword:tom-password\n\n# create FIRST Level groups branch\ndn: ou=groups,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:organizationalUnit\nou: groups\ndescription: generic groups branch\n\n# create the analyst group under groups\ndn: cn=analyst,ou=groups,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass: groupofnames\ncn: analyst\ndescription:analyst  group\nmember: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\nmember: uid=tom,ou=people,dc=hadoop,dc=apache,dc=org\n\n\n# create the scientist group under groups\ndn: cn=scientist,ou=groups,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass: groupofnames\ncn: scientist\ndescription: scientist group\nmember: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org"
                }
            }
        },